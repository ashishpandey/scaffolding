#!/bin/bash
#description=backup shares to zfs
#arrayStarted=true
#name=zfs shares backup
#clearLog=true
#noParity=true

# setup
shares="appdata backups data domains gigamac isos nextcloud photo scripts software video"
dst="/mnt/zdata/backup/"

# ensure unicode filenames are supported
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export G_FILENAME_ENCODING="@locale"
export G_BROKEN_FILENAMES="1"

notify_user() {
    sub="$1"
    msg="$2"
    echo "$msg"
    /usr/local/emhttp/webGui/scripts/notify -i normal -s "$sub" -d "$msg"
}

warn_user() {
    sub="$1"
    msg="$2"
    echo "$msg"
    /usr/local/emhttp/webGui/scripts/notify -i warning -s "$sub" -d "$msg"
}

name="Shares Backup"
if [ ! -d "$dst" ]; then
    warn_user "Sync Failure" "$name: bad dest: $dst"
else
    # sync
    notify_user "Sync Started" "$name: Backing up shares to $dst"
    for share in $shares
    do
        src="/mnt/user/$share"
        if [ ! -d "$src" ]; then
            warn_user "Sync Failure" "$name: bad src $src"
        else
            echo "Sync ($share): $src => $dst"

            rsync --archive --verbose --delete $src $dst
            if [[ $? -eq 0 ]]; then
                notify_user "Sync Complete" "$name: Synchronized $share successfully"
            else
                warn_user "Sync Failure" "$name: Error. Failed to synchronize $share"
            fi
        fi
    done
fi

# snapshot the zfs backup dataset
snap="zdata/backup@$(date +%Y%m%d-%H%M%S)"
zfs snapshot -r ${snap}
if [ $? != 0 ]; then
    warn_user "ZFS Snapshot" "failed ${snap}"
    exit 13
else
    notify_user "ZFS Snapshot" "created ${snap}"
fi

/mnt/user/scripts/zfs_prune_snapshots.sh 1M zdata/backup
if [ $? != 0 ]; then
    warn_user "ZFS Snapshot" "could not purge old snapshots"
    exit 13
fi

echo "zbackup done"
